f = open("meeting.in", "r").read().split("\n")[:-1]
<br>
<br>N = int(f[0].split(" ")[0])
<br>
<br>f = f[1:]
<br>
<br>for i in range(0, len(f)):
<br>&nbsp;&nbsp;&nbsp;&nbsp;f[i] = f[i].split(" ")
<br>&nbsp;&nbsp;&nbsp;&nbsp;f[i][0] = int(f[i][0]) - 1
<br>&nbsp;&nbsp;&nbsp;&nbsp;f[i][1] = int(f[i][1]) - 1
<br>&nbsp;&nbsp;&nbsp;&nbsp;f[i][2] = int(f[i][2])
<br>&nbsp;&nbsp;&nbsp;&nbsp;f[i][3] = int(f[i][3])
<br>
<br>f.sort()
<br>
<br>timeTable = []
<br>
<br>for i in range(0, N):
<br>&nbsp;&nbsp;&nbsp;&nbsp;timeTable.append([[],[]]); # bestieTime, elsieTime
<br>
<br># parse the actual data into the datatable
<br>
<br>for i in range(0, len(f)):
<br>&nbsp;&nbsp;&nbsp;&nbsp;if f[i][0] == 0:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeTable[f[i][1]][0].append(f[i][2])
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeTable[f[i][1]][1].append(f[i][3])
<br>&nbsp;&nbsp;&nbsp;&nbsp;else:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if timeTable[f[i][0]] != [[],[]]:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for a in range(0, len(timeTable[f[i][0]][0])):
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeTable[f[i][1]][0].append(timeTable[f[i][0]][0][a] + f[i][2])
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;timeTable[f[i][1]][1].append(timeTable[f[i][0]][1][a] + f[i][3])
<br>
<br>bestieTime = timeTable[-1][0]
<br>bestieTime.sort();
<br>elsieTime = timeTable[-1][1]
<br>
<br>ans = "IMPOSSIBLE\n";
<br>
<br>for i in range(0, len(bestieTime)):
<br>&nbsp;&nbsp;&nbsp;&nbsp;if bestieTime[i] in elsieTime:
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ans = str(bestieTime[i]) + "\n"
<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;
<br>
<br>out = open("meeting.out", "w").write(ans)
<br>